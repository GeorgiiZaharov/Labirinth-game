name: CI/CD GitHub Actions
on: [push]
jobs:
  gtest-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Download dependencies
        run: |
          git submodule init
          git submodule update
          pip install --user cpp-coveralls
          sudo apt-get update -y && sudo apt-get install -y libsfml-dev lcov

      - name: Build googletest
        run: |
          cd tests/external/googletest
          mkdir -p build
          cd build
          cmake ..
          make

      - name: Run tests and send data to Coveralls
        run: |
          cd tests
          make coverage
          coveralls --gcov-options '\-lp' --root .. --build-root . -E ".*external.*" -E ".*tests.*" -t ${{ secrets.coveralls_repo_token }}

  sonarcloud:
    runs-on: ubuntu-latest
    steps:  
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v2
      - name: Download dependencies
        run: |
          git submodule init
          git submodule update
          pip install --user cpp-coveralls
          sudo apt-get update -y && sudo apt-get install -y libsfml-dev lcov

      - name: Build googletest
        run: |
          cd tests/external/googletest
          mkdir -p build
          cd build
          cmake ..
          make
          export CPLUS_INCLUDE_PATH="/usr/local/include:$CPLUS_INCLUDE_PATH"

      - name: Run build-wrapper
        run: |
          cd tests
          build-wrapper-linux-x86-64 --out-dir build_wrapper_output_directory make
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner --define sonar.cfamily.compile-commands="build_wrapper_output_directory/compile_commands.json"
