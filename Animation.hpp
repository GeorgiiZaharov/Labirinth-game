#ifndef ANIMATION_HPP
#define ANIMATION_HPP

#include "includes.hpp"

// Класс Animation предназначен для управления анимацией, используя набор спрайтов из одного текстурного файла.
// Этот класс позволяет создавать анимации, которые могут быть воспроизведены в определенное время, с возможностью повторения.
// Он предоставляет методы для получения текущего спрайта в зависимости от времени и проверки состояния анимации.

class Animation
{
public: 
    /*
     * ===================================================
     * Конструкторы
     * ===================================================
     */
    explicit Animation() = default;
    // Конструктор, принимает путь к файлу текстуры, размеры одного спрайта, количество спрайтов,
    // время между переключениями спрайтов и флаг, указывающий, должна ли анимация повторяться.
    explicit Animation(sf::Texture& tex, const sf::Sound& sound, float h, float w, std::size_t n, __int64_t time_for_change, bool is_looped);

    // Конструктор для беззвучных анимаций
    explicit Animation(sf::Texture& tex, float h, float w, std::size_t n, __int64_t time_for_change, bool is_looped);

    /*
     * ===================================================
     * Методы
     * ===================================================
     */
    // Метод, запускает анимацию с заданным текущим временем.
    void start_animation(__int64_t cur_time);

    // Изменяет размер sf::Sprite-ов
    void resize_animation(const sf::FloatRect& pos);

    /*
     * ===================================================
     * Геттеры/Сеттеры
     * ===================================================
     */
    // Метод, возвращает true, если анимация в данный момент воспроизводится.
    bool is_running(void) const;

    // Метод, возвращает текущий спрайт в зависимости от текущего времени.
    sf::Sprite get_sprite(__int64_t cur_time);

private:
    // Загружает данные из текстурного файла и инициализирует внутренние структуры данных.
    void load_data(void);

    // Текстура, содержащая все спрайты.
    sf::Texture *tex;

    // Запись звука для проигрывания
    sf::Sound sound;

    // Ширина и высота одного спрайта.
    float h, w;

    // Количество спрайтов в анимации.
    std::size_t num_sprites, cur_sprite_num;
    // Время между переключениями спрайтов и последнее время переключения.
    __int64_t time_for_change, last_time;

    // Вектор для хранения спрайтов.
    std::vector<sf::Sprite> sprites;

    // Флаг, указывающий, в данный момент воспроизводится анимация.
    bool running, is_looped, with_sound;
};

#endif
